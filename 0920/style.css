/* 
<< CSS 선택자 >>
CSS 문법은 크게 선택자와 선언부로 구성이 됩니다. 
그 중 선택자는 CSS를 적용할 태그(요소)를 지정하는 문법적인 영역이며 CSS는 선택자를 지정하는 다양한 방법을 제공 합니다.
- 전체 선택자 : 모든 요소를 한번에 선택자로 지정하는 방법
- 태그 선택자 : 태그명으로 선택자를 지정하는 방법
- 클래스 선택자 : .클래스명{스타일 규칙}  큰 따옴표 안에 여러개 클래스 지정 가능
- 아이디 선택자 : id 속성값을 이용해 선택자를 지정하는 방법. 속성값 앞에 # 기호를 붙인다.
클래스 선택자는 문서에서 여러번 적용할 수 있지만 id선택자는 문서에서 한 번만 적용된다.

# 조합 선택자 사용하기 (기본선택자의 의미를 더 풍부하게 해주는 선택자 방법)
- 기본속성 선택자 : 태그의 속성과 값을 사용해 선택자를 지정하는 방법
- 그룹 선택자 : 여러 선택자를 하나로 그룹 지을 때 사용 합니다. 선택자와 선택자는 , 기호로 구분 합니다.
- 자식 선택자 : 자식 선택자는 부모 요소의 하위에 있는 자식 요소에 스타일을 적용할 때 사용 합니다. 선택자와 선택자는 > 기호로 구분 합니다.
부모선택자 > 자식선택자 {css code}
- 인접 형제 선택자 : 지정한 선택자 요소 바로 다음에 있는 형제관계요소를 선택자로 지정. + 기호로 구분함.
이전선택자 + 대상선택자 {css code}
- 일반 형제 선택자 : 이전 선택자 뒤에 오는 형제 관계 요소를 모두 선택자로 지정(대상선택자가 여러개 일 경우 모두 지정된다.)
이전 선택자 ~ 대상 선택자{css code}

# 가상 요소 선택자 사용하기
가상 요소 선택자는 HTML 문서에 명시적으로 작성된 구성 요소는 아니지만, 마치 존재하는 것처럼 취급해 선택하는 선택자 지정 방법을 말합니다. 
기준 선택자::가상 요소 선택자{css code}

# 가상 클래스 선택자 사용하기(요소의 상태를 이용해 선택자를 지정하는 방법)
- 링크 가상 클래스 선택자 : a 태그의 링크 상태를 이용해 선택하는 방법
기준 요소:가상 클래스 선택자{css code}
 → :link 한번도 방문하지 않은 링크일 때 선택
 → :visited 한 번이라도 방문한 적이 있는 링크일 때 선택 

- 동적 가상 클래스 선택자 : 사용자의 행동에 따라 동적으로 변하는 상태를 이용해 선택자를 지정하는 방법
 → :hover 요소에 마우스를 올리면 해당 태그가 선택자로 지정됨
 → :active 요소를마우스로 클릭하고 있는 동안 해당 태그가 선택자로 지정됨

- 입력 요소 가상 클래스 선택자 : 입력 요소의 특정 상태를 이용해 선택자로 지정하는 방법
 → :focus 입력  요소에 커서가 활성화 되면 선택자 지정
 → :checked 체크박스가 표시되어 있으면 선택자로 지정
 → :disabled 상호작용 요소가 비활성화 되면 선택자 지정
 → :enabled 상호작용 요소가 활성화 되면 선택자 지정

- 구조적 가상 클래스 선택자 : 웹 문서의 구조를 기준으로 특정 위치에 있는 요소를 찾아 스타일을 적용할 때 사용
 → E:first-child 첫번쨰 자식 요소 선택
 → E:last-child 마지막 자식 요소 선택
 → E:nth-child(n) n번째 자식 요소 선택
 → E:nth-last-child(n) 뒤에서부터 n번째 자식 요소 선택
 → E:nth-of-type(n) n번째로 등장하는 자식요소 선택
 → E:nth-last-of-type(n) 마지막에서 n번째로 등장하는 요소
 → E:first-of-type 첫 번째로 등장하는 요소 선택
 → E:last-of-type 마지막으로 등장하는 요소 선택

 # 선택자 조합하기

*/

* {
    color: rgb(221, 59, 59);
}
/* 태그 선택자 */
div {
    /* width: 200px; */
    /* height: 200px; */
    /* background-color: pink; */
    color: aliceblue;
}
p {
    font-style: italic;
}
/* 클래스 선택자 */
.accent {
    border: 1px solid #000;
    padding: 5px;
}
.bg {
    background-color: rgb(194, 129, 159);
}
/* 아이디 선택자 */
#container {
    width: 500px;
    margin: 10px auto;  /*테두리의 바깥 여백*/
    padding: 10px;      /*테두리의 안쪽 여백*/
    border: 1px solid #000;        /*테두리 라인 지정*/
}
/* 기본 속성 선택자 */
a[target="_blank"]{
    color: rgb(0, 60, 255);
}
/* 조합 선택자 */
p, #title, .red {
    color : red;
}
/* 자식 선택자 */
/* .box > p {
    background-color: rgb(186, 255, 130);
} */
/* 인접 형제 선택자 */
h1 + h2 {
    background-color: rgb(231, 245, 104);
}
/* 일반 형제 선택자 */
h1 ~ h3 {
    background-color: fuchsia;
}
/* 가상 요소 선택자 */
/* p::before {
    content: '( ╯□╰ )>'
}
p::after {
    content: '^^'
} */
/* 링크 가상 클래스 선택자 */
a:link {
    color: rgb(230, 84, 59);
}
a:visited {
    color: rgb(18, 190, 55);
}
/* 동적 가상 선택자 */
button {
    width: 150px;
    height: 80px;
    background-color: rgb(54, 135, 189);
    color: white;
    transition: 1s .5s;   /* 지속시간, 대기시간 */
}
/* button:hover {
    width: 300px;
    height: 150px;
    background-color: mediumslateblue;
}
button:active {
    width: 300px;
    height: 150px;
    background-color: brown;
} */
/* 입력 요소 가상 클래스 선택자 */
input:checked {
    color: deeppink;
    background-color: chartreuse;
}

/* 구조적 가상 클래스 선택자 */
p:nth-child(1) {
    color: orchid;
}
p:nth-of-type(2) {
    color: green;
}
/* 선택자 조합하기 */
div.box {
    background-color: black;
}
section#main {
    background-color: aqua;
}
div:hover > button {
    background-color: fuchsia;
}
a[target="_blank"] {
    background-color: yellow;
    border: 1px solid #ccc;
    font-weight: bold;
}
